/**************************************************************
 * This file is part of  Project  
 * Copyright (C)2019 Microsoft
 * 
 * Author      : Generated by CodeSmith(Entity_v3.cst)
 * Mail        : 
 * Create Date : 2019/9/4 9:43:04
 * Summary     : this file was auto generated by tool . do not modify
 * 
 * 
 * Modified By : 
 * Date        : 
 * Mail        :
 * Comment     :增加新属性Cloumn,Dispaly 需要和相应的DalBase对应
 * *************************************************************/

using System; 
using System.Collections.Generic;
using System.Text;
using System.Xml;
using System.Runtime.Serialization;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using ZJ.App.Common;

namespace ZJ.App.Entity
{
	/// <summary>
	/// 表tbiz_question数据实体
	/// </summary>
	[Serializable]
    [DataContract]
	[TableName("tbiz_question")]
	public partial class tbiz_questionEntity : EntityBase
	{ 
		
		#region 构造函数
		///<summary>
		///
		///</summary>
		public tbiz_questionEntity():base()
		{
			
		}

        public tbiz_questionEntity(bool IsQueryTemplate) : base(IsQueryTemplate)
        {

        }
		 
		#endregion 
		
		#region 公共属性
        #region Id
        ///<summary>
        ///
        ///</summary>
        public const string FieldName_Id = "Id";
        private uint _Id;
		///<summary>
		///
		///</summary>
        [DataMember]
        [Column(Name="Id")]
        [PrimaryKey]
		[Identity]
        public uint Id
		{
			get{return _Id;}
            set
            {
                if (_IsQueryTemplate)
                {
                    this.RegisterQueryCondition(FieldName_Id, value);
                }
                
                _Id = value;
            }   
		}
        
	    #endregion

        #region QuestionTitle
        ///<summary>
        ///
        ///</summary>
        public const string FieldName_QuestionTitle = "QuestionTitle";
        private string _QuestionTitle;
		///<summary>
		///
		///</summary>
        [DataMember]
        [Column(Name="QuestionTitle")]
		[MaxLength(1500)]
        public string QuestionTitle
		{
			get{return _QuestionTitle;}
            set
            {
                if (_IsQueryTemplate)
                {
                    this.RegisterQueryCondition(FieldName_QuestionTitle, value);
                }
                
                _QuestionTitle = value;
            }   
		}
        
	    #endregion

        #region SubjectType
        ///<summary>
        ///
        ///</summary>
        public const string FieldName_SubjectType = "SubjectType";
        private int? _SubjectType;
		///<summary>
		///
		///</summary>
        [DataMember]
        [Column(Name="SubjectType")]
        public int? SubjectType
		{
			get{return _SubjectType;}
            set
            {
                if (_IsQueryTemplate)
                {
                    this.RegisterQueryCondition(FieldName_SubjectType, value);
                }
                
                _SubjectType = value;
            }   
		}
        
	    #endregion

        #region QuestionType
        ///<summary>
        ///
        ///</summary>
        public const string FieldName_QuestionType = "QuestionType";
        private sbyte? _QuestionType;
		///<summary>
		///
		///</summary>
        [DataMember]
        [Column(Name="QuestionType")]
        public sbyte? QuestionType
		{
			get{return _QuestionType;}
            set
            {
                if (_IsQueryTemplate)
                {
                    this.RegisterQueryCondition(FieldName_QuestionType, value);
                }
                
                _QuestionType = value;
            }   
		}
        
	    #endregion

        #region QuestionOptionIds
        ///<summary>
        ///
        ///</summary>
        public const string FieldName_QuestionOptionIds = "QuestionOptionIds";
        private string _QuestionOptionIds;
		///<summary>
		///
		///</summary>
        [DataMember]
        [Column(Name="QuestionOptionIds")]
		[MaxLength(765)]
        public string QuestionOptionIds
		{
			get{return _QuestionOptionIds;}
            set
            {
                if (_IsQueryTemplate)
                {
                    this.RegisterQueryCondition(FieldName_QuestionOptionIds, value);
                }
                
                _QuestionOptionIds = value;
            }   
		}
        
	    #endregion

        #region AnswerIds
        ///<summary>
        ///
        ///</summary>
        public const string FieldName_AnswerIds = "AnswerIds";
        private string _AnswerIds;
		///<summary>
		///
		///</summary>
        [DataMember]
        [Column(Name="AnswerIds")]
		[MaxLength(765)]
        public string AnswerIds
		{
			get{return _AnswerIds;}
            set
            {
                if (_IsQueryTemplate)
                {
                    this.RegisterQueryCondition(FieldName_AnswerIds, value);
                }
                
                _AnswerIds = value;
            }   
		}
        
	    #endregion

        #region CreateTime
        ///<summary>
        ///
        ///</summary>
        public const string FieldName_CreateTime = "CreateTime";
        private System.DateTime? _CreateTime;
		///<summary>
		///
		///</summary>
        [DataMember]
        [Column(Name="CreateTime")]
        public System.DateTime? CreateTime
		{
			get{return _CreateTime;}
            set
            {
                if (_IsQueryTemplate)
                {
                    this.RegisterQueryCondition(FieldName_CreateTime, value);
                }
                
                _CreateTime = value;
            }   
		}
        
	    #endregion
		#endregion
	}
}

