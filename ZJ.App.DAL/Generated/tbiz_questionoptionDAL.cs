/**************************************************************
 * This file is part of SMP Project
 * Copyright (C)2019 Microsoft
 * 
 * Author      : Generated by CodeSmith(DAL_v3.cst)
 * Mail        : 
 * Create Date : 2019/8/29 10:00:06
 * Summary     : this file was auto generated by tool . do not modify
 * 
 * 
 * Modified By : 
 * Date        : 
 * Mail        : 
 * Comment     :   
 * *************************************************************/
using System;
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections.Generic;
using ZJ.App.Common;
using ZJ.App.Entity;

namespace ZJ.App.DAL
{
    /// <summary>
    /// Data Access Layer class tbiz_questionoption.
    /// </summary>
    public partial class tbiz_questionoptionDAL : DalBase<tbiz_questionoptionEntity>
    {
        #region 构造函数
        
		public tbiz_questionoptionDAL(): base()
        { }

        public tbiz_questionoptionDAL(string DbName): base(DbName)
        { }

        public tbiz_questionoptionDAL(DbTransaction tran): base(tran)
        { }
        
        #endregion
        
        #region public method
        
        public void BulkInsert(List<tbiz_questionoptionEntity> list)
        {
            foreach (tbiz_questionoptionEntity item in list)
            {
                this.Insert(item);
            }
            /*
            SqlBulkCopy bulkCopy;
            if (System.Transactions.Transaction.Current != null)
            {
                using (System.Transactions.TransactionScope t = new System.Transactions.TransactionScope(System.Transactions.TransactionScopeOption.Suppress))
                {
                    bulkCopy = new SqlBulkCopy(CurrentDatabase.ConnectionString, SqlBulkCopyOptions.CheckConstraints);
                    bulkCopy.BulkCopyTimeout = 360;
                    bulkCopy.DestinationTableName = "tbiz_questionoption";
                    DataTable dataTable =ConvertToDataTable(list);
                    bulkCopy.ColumnMappings.Add("Id", "Id");
                    bulkCopy.ColumnMappings.Add("OptionTitle", "OptionTitle");
                    bulkCopy.ColumnMappings.Add("QuestionId", "QuestionId");
                    bulkCopy.ColumnMappings.Add("OptionType", "OptionType");
                    bulkCopy.ColumnMappings.Add("PublicDate", "PublicDate");
                    bulkCopy.ColumnMappings.Add("CreateTime", "CreateTime");
                    
                    bulkCopy.WriteToServer(dataTable);
                    t.Complete();
                    bulkCopy.Close();
                }
            }
            else
            {
                bulkCopy = new SqlBulkCopy(CurrentDatabase.ConnectionString, SqlBulkCopyOptions.CheckConstraints);
                bulkCopy.BulkCopyTimeout = 360;
                bulkCopy.DestinationTableName = "tbiz_questionoption";
                DataTable dataTable =ConvertToDataTable(list);
                bulkCopy.ColumnMappings.Add("Id", "Id");
                bulkCopy.ColumnMappings.Add("OptionTitle", "OptionTitle");
                bulkCopy.ColumnMappings.Add("QuestionId", "QuestionId");
                bulkCopy.ColumnMappings.Add("OptionType", "OptionType");
                bulkCopy.ColumnMappings.Add("PublicDate", "PublicDate");
                bulkCopy.ColumnMappings.Add("CreateTime", "CreateTime");
                
                bulkCopy.WriteToServer(dataTable);
                bulkCopy.Close();
            }
             */
        }
        #endregion
        
        #region help method
        public DataTable ConvertToDataTable(List<tbiz_questionoptionEntity> list)
        {
            DataTable table = new DataTable("tbiz_questionoption");
            table.Columns.Add("Id", typeof(System.UInt32));
            table.Columns.Add("OptionTitle", typeof(System.String));
            table.Columns.Add("QuestionId", typeof(System.Int32));
            table.Columns.Add("OptionType", typeof(System.Int32));
            table.Columns.Add("PublicDate", typeof(System.Int32));
            table.Columns.Add("CreateTime", typeof(System.DateTime));
            
            if (list != null && list.Count > 0)
            {
                foreach (tbiz_questionoptionEntity entity in list)
                {
                    table.Rows.Add(
                        entity.Id,
                        entity.OptionTitle,
                        entity.QuestionId,
                        entity.OptionType,
                        entity.PublicDate,
                        entity.CreateTime
                        );
                }
            }
            return table;
        }
        #endregion
    }
}
